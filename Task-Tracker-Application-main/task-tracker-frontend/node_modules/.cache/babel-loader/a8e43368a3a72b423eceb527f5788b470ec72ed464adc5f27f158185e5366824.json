{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Tracker Application\\\\task_tracker-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport SignupForm from './components/Auth/SignupForm';\nimport LoginForm from './components/Auth/LoginForm';\nimport ProjectList from './components/project/ProjectList';\nimport CreateProjectForm from './components/project/CreateProjectForm';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport TaskForm from './components/tasks/TaskForm';\nimport TaskDetails from './components/tasks/TaskDetails';\nimport TaskList from './components/tasks/TaskList';\nimport Header from './components/Header'; // Your header component\nimport Dashboard from './components/Dashboard'; // Your dashboard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Check if the user is logged in on initial load\n  useEffect(() => {\n    const token = sessionStorage.getItem('authToken');\n    if (token) {\n      setIsLoggedIn(true); // Set logged-in state if token exists\n    }\n\n    // Add event listener to detect changes in sessionStorage\n    const handleStorageChange = () => {\n      const updatedToken = sessionStorage.getItem('authToken');\n      if (updatedToken) {\n        setIsLoggedIn(true); // Update state if token is found\n        window.location.reload(); // Reload the app to reflect the change\n      }\n    };\n    window.addEventListener('storage', handleStorageChange);\n\n    // Cleanup listener on unmount\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [isLoggedIn && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 24\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 49\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(SignupForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(LoginForm, {\n            onLogin: () => setIsLoggedIn(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projects\",\n          element: /*#__PURE__*/_jsxDEV(ProjectList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projects/create\",\n          element: /*#__PURE__*/_jsxDEV(CreateProjectForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projects/:projectId\",\n          element: /*#__PURE__*/_jsxDEV(ProjectDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projects/:projectId\",\n          element: /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tasks/:taskId\",\n          element: /*#__PURE__*/_jsxDEV(TaskDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projects/:projectId/tasks/new\",\n          element: /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navigate","SignupForm","LoginForm","ProjectList","CreateProjectForm","ProjectDetails","TaskForm","TaskDetails","TaskList","Header","Dashboard","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","token","sessionStorage","getItem","handleStorageChange","updatedToken","window","location","reload","addEventListener","removeEventListener","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","onLogin","_c","$RefreshReg$"],"sources":["D:/Task Tracker Application/task_tracker-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport SignupForm from './components/Auth/SignupForm';\nimport LoginForm from './components/Auth/LoginForm';\nimport ProjectList from './components/project/ProjectList';\nimport CreateProjectForm from './components/project/CreateProjectForm';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport TaskForm from './components/tasks/TaskForm';\nimport TaskDetails from './components/tasks/TaskDetails';\nimport TaskList from './components/tasks/TaskList';     \nimport Header from './components/Header'; // Your header component\nimport Dashboard from './components/Dashboard'; // Your dashboard component\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // Check if the user is logged in on initial load\n  useEffect(() => {\n    const token = sessionStorage.getItem('authToken');\n    if (token) {\n      setIsLoggedIn(true);  // Set logged-in state if token exists\n    }\n\n    // Add event listener to detect changes in sessionStorage\n    const handleStorageChange = () => {\n      const updatedToken = sessionStorage.getItem('authToken');\n      if (updatedToken) {\n        setIsLoggedIn(true);  // Update state if token is found\n        window.location.reload();  // Reload the app to reflect the change\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n\n    // Cleanup listener on unmount\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        {isLoggedIn && <Header />} {/* Show header if logged in */}\n\n        <Routes>\n          <Route path=\"/\" element={isLoggedIn ? <Dashboard /> : <Navigate to=\"/login\" />} />\n          <Route path=\"/signup\" element={<SignupForm />} />\n          <Route path=\"/login\" element={<LoginForm onLogin={() => setIsLoggedIn(true)} />} />\n          <Route path=\"/projects\" element={<ProjectList />} />\n          <Route path=\"/projects/create\" element={<CreateProjectForm />} />\n          <Route path=\"/projects/:projectId\" element={<ProjectDetails />} />\n          <Route path=\"/projects/:projectId\" element={<TaskList />} />\n          <Route path=\"/tasks/:taskId\" element={<TaskDetails />} />\n          <Route path=\"/projects/:projectId/tasks/new\" element={<TaskForm />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}