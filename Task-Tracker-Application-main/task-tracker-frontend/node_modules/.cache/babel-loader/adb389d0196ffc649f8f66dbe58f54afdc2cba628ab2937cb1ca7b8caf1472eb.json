{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Tracker Application\\\\task_tracker-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport SignupForm from './components/Auth/SignupForm';\nimport LoginForm from './components/Auth/LoginForm';\nimport ProjectList from './components/project/ProjectList';\nimport CreateProjectForm from './components/project/CreateProjectForm';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport TaskForm from './components/tasks/TaskForm';\nimport TaskDetails from './components/tasks/TaskDetails';\nimport TaskList from './components/tasks/TaskList';\n//import Header from './components/Layout/Header'; // Your header component\nimport Dashboard from './components/Dashboard/Dashboard'; // Your dashboard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    // Check if user is logged in by checking for an auth token in localStorage\n    const userLoggedIn = localStorage.getItem('authToken') !== null;\n    setIsLoggedIn(userLoggedIn);\n  }, []); // Run only once on mount to check for token\n\n  const handleLogin = () => {\n    // Set auth token in localStorage\n    localStorage.setItem('authToken', 'your-auth-token');\n    // Update login state\n    setIsLoggedIn(true); // This will trigger a re-render\n  };\n  const handleLogout = () => {\n    // Remove auth token from localStorage\n    localStorage.removeItem('authToken');\n    // Update login state\n    setIsLoggedIn(false); // This will trigger a re-render\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(SignupForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginForm, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/projects\",\n        element: /*#__PURE__*/_jsxDEV(ProjectList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/projects/create\",\n        element: /*#__PURE__*/_jsxDEV(CreateProjectForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/projects/:projectId\",\n        element: /*#__PURE__*/_jsxDEV(ProjectDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 53\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"tasks\",\n          element: /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"tasks/:taskId\",\n          element: /*#__PURE__*/_jsxDEV(TaskDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"tasks/new\",\n          element: /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Navigate","SignupForm","LoginForm","ProjectList","CreateProjectForm","ProjectDetails","TaskForm","TaskDetails","TaskList","Dashboard","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","userLoggedIn","localStorage","getItem","handleLogin","setItem","handleLogout","removeItem","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["D:/Task Tracker Application/task_tracker-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport SignupForm from './components/Auth/SignupForm';\nimport LoginForm from './components/Auth/LoginForm';\nimport ProjectList from './components/project/ProjectList';\nimport CreateProjectForm from './components/project/CreateProjectForm';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport TaskForm from './components/tasks/TaskForm';\nimport TaskDetails from './components/tasks/TaskDetails';\nimport TaskList from './components/tasks/TaskList';\n//import Header from './components/Layout/Header'; // Your header component\nimport Dashboard from './components/Dashboard/Dashboard'; // Your dashboard component\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    // Check if user is logged in by checking for an auth token in localStorage\n    const userLoggedIn = localStorage.getItem('authToken') !== null;\n    setIsLoggedIn(userLoggedIn);\n  }, []); // Run only once on mount to check for token\n\n  const handleLogin = () => {\n    // Set auth token in localStorage\n    localStorage.setItem('authToken', 'your-auth-token');\n    // Update login state\n    setIsLoggedIn(true); // This will trigger a re-render\n  };\n\n  const handleLogout = () => {\n    // Remove auth token from localStorage\n    localStorage.removeItem('authToken');\n    // Update login state\n    setIsLoggedIn(false); // This will trigger a re-render\n  };\n\n  return (\n    <div className=\"app\">\n      {/* Conditionally render the header if the user is logged in */}\n      {/*isLoggedIn && <Header onLogout={handleLogout} />*/}\n\n      <Routes>\n        {/* Authentication Routes */}\n       \n        <Route path=\"/dashboard\" element={<Dashboard />} />\n        <Route path=\"/signup\" element={<SignupForm />} />\n        <Route path=\"/login\" element={<LoginForm onLogin={handleLogin} />} />\n\n        {/* Projects Routes */}\n        <Route path=\"/projects\" element={<ProjectList />} />\n        <Route path=\"/projects/create\" element={<CreateProjectForm />} />\n\n        {/* Nested Routes for Project Details and Tasks */}\n        <Route path=\"/projects/:projectId\" element={<ProjectDetails />}>\n          <Route path=\"tasks\" element={<TaskList />} />\n          <Route path=\"tasks/:taskId\" element={<TaskDetails />} />\n          <Route path=\"tasks/new\" element={<TaskForm />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}