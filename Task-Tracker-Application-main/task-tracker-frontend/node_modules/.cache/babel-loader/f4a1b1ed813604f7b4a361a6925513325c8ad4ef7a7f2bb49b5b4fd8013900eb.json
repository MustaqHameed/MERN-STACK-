{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Tracker Application\\\\task_tracker-frontend\\\\src\\\\components\\\\project\\\\ProjectCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/ProjectCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectCard = ({\n  project,\n  totalTasks,\n  completedTasks\n}) => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  // Function to format description if needed\n  const formatDescription = description => {\n    return description ? description : 'No description available';\n  };\n  useEffect(() => {\n    // Calculate progress based on the passed props\n    setProgress(totalTasks ? completedTasks / totalTasks * 100 : 0);\n    setIsCompleted(totalTasks && completedTasks === totalTasks); // All tasks completed\n  }, [totalTasks, completedTasks]); // Recalculate when totalTasks or completedTasks change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `project-card ${isCompleted ? 'completed' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"project-title\",\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"project-description\",\n        children: formatDescription(project.description)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: `project-status ${isCompleted ? 'done' : 'in-progress'}`,\n          children: [\"Status: \", isCompleted ? 'Completed' : 'In Progress']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"horizontal-progress-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontal-progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${progress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"progress-percent\",\n            children: [Math.round(progress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-footer\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/projects/${project._id}`,\n        className: \"view-details-btn\",\n        children: \"View Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectCard, \"trC5qcRBxZ9SWXyinItdWveXRmQ=\");\n_c = ProjectCard;\nexport default ProjectCard;\nvar _c;\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","ProjectCard","project","totalTasks","completedTasks","_s","progress","setProgress","isCompleted","setIsCompleted","formatDescription","description","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","style","width","Math","round","to","_id","_c","$RefreshReg$"],"sources":["D:/Task Tracker Application/task_tracker-frontend/src/components/project/ProjectCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/ProjectCard.css';\r\n\r\nconst ProjectCard = ({ project, totalTasks, completedTasks }) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n\r\n  // Function to format description if needed\r\n  const formatDescription = description => {\r\n    return description ? description : 'No description available';\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Calculate progress based on the passed props\r\n    setProgress(totalTasks ? (completedTasks / totalTasks) * 100 : 0);\r\n    setIsCompleted(totalTasks && completedTasks === totalTasks); // All tasks completed\r\n  }, [totalTasks, completedTasks]); // Recalculate when totalTasks or completedTasks change\r\n\r\n  return (\r\n    <div className={`project-card ${isCompleted ? 'completed' : ''}`}>\r\n      <div className=\"card-header\">\r\n        <h3 className=\"project-title\">{project.title}</h3>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <p className=\"project-description\">{formatDescription(project.description)}</p>\r\n        <div className=\"status-section\">\r\n          <p className={`project-status ${isCompleted ? 'done' : 'in-progress'}`}>\r\n            Status: {isCompleted ? 'Completed' : 'In Progress'}\r\n          </p>\r\n          <div className=\"horizontal-progress-container\">\r\n            <div className=\"horizontal-progress-bar\">\r\n              <div className=\"progress-fill\" style={{ width: `${progress}%` }}></div>\r\n            </div>\r\n            <p className=\"progress-percent\">{Math.round(progress)}%</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card-footer\">\r\n        <Link to={`/projects/${project._id}`} className=\"view-details-btn\">\r\n          View Details\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}