{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Tracker Application\\\\task_tracker-frontend\\\\src\\\\components\\\\project\\\\ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ProjectCard from './ProjectCard';\nimport '../styles/ProjectList.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = ({\n  refreshProjects\n}) => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProjectsWithTasks = async () => {\n      try {\n        setLoading(true);\n        const token = localStorage.getItem('authToken');\n\n        // Fetch projects\n        const res = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/projects`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const projects = res.data;\n\n        // Fetch tasks for each project by passing the project ID in the request body\n        const projectsWithTasks = await Promise.all(projects.map(async project => {\n          try {\n            const taskRes = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/tasks`,\n            // Changed to POST method\n            {\n              projectId: project._id\n            },\n            // Sending projectId in the body\n            {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            return {\n              ...project,\n              tasks: taskRes.data\n            };\n          } catch (taskErr) {\n            console.error(`Failed to fetch tasks for project ${project._id}`);\n            return {\n              ...project,\n              tasks: []\n            }; // If tasks fail, return empty array\n          }\n        }));\n        setProjects(projectsWithTasks);\n      } catch (err) {\n        console.error(err);\n        setError('Failed to fetch projects');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjectsWithTasks();\n  }, [refreshProjects]); // Only refetch when refreshProjects changes\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-project-btn\",\n        onClick: () => navigate('/projects/create'),\n        children: \"Create New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-list\",\n      children: projects.length > 0 ? projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: project\n      }, project._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-projects\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No projects found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectList, \"aL8t7UUjNb2/yA2cemYHJu5qwVM=\", false, function () {\n  return [useNavigate];\n});\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useEffect","useState","axios","ProjectCard","useNavigate","jsxDEV","_jsxDEV","ProjectList","refreshProjects","_s","projects","setProjects","loading","setLoading","error","setError","navigate","fetchProjectsWithTasks","token","localStorage","getItem","res","get","process","env","REACT_APP_API_BASE_URL","headers","Authorization","data","projectsWithTasks","Promise","all","map","project","taskRes","post","projectId","_id","tasks","taskErr","console","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","_c","$RefreshReg$"],"sources":["D:/Task Tracker Application/task_tracker-frontend/src/components/project/ProjectList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ProjectCard from './ProjectCard';\r\nimport '../styles/ProjectList.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ refreshProjects }) => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProjectsWithTasks = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const token = localStorage.getItem('authToken');\r\n        \r\n        // Fetch projects\r\n        const res = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/projects`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        const projects = res.data;\r\n\r\n        // Fetch tasks for each project by passing the project ID in the request body\r\n        const projectsWithTasks = await Promise.all(\r\n          projects.map(async (project) => {\r\n            try {\r\n              const taskRes = await axios.post(\r\n                `${process.env.REACT_APP_API_BASE_URL}/api/tasks`, // Changed to POST method\r\n                { projectId: project._id }, // Sending projectId in the body\r\n                {\r\n                  headers: { Authorization: `Bearer ${token}` },\r\n                }\r\n              );\r\n              return { ...project, tasks: taskRes.data };\r\n            } catch (taskErr) {\r\n              console.error(`Failed to fetch tasks for project ${project._id}`);\r\n              return { ...project, tasks: [] }; // If tasks fail, return empty array\r\n            }\r\n          })\r\n        );\r\n\r\n        setProjects(projectsWithTasks);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError('Failed to fetch projects');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProjectsWithTasks();\r\n  }, [refreshProjects]); // Only refetch when refreshProjects changes\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-spinner\">\r\n        <p>Loading...</p> {/* You could replace this with a spinner */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error-message\">\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-list-container\">\r\n      <div className=\"project-header\">\r\n        <h2>Your Projects</h2>\r\n        <button\r\n          className=\"create-project-btn\"\r\n          onClick={() => navigate('/projects/create')}\r\n        >\r\n          Create New Project\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"project-list\">\r\n        {projects.length > 0 ? (\r\n          projects.map((project) => (\r\n            <ProjectCard key={project._id} project={project} />\r\n          ))\r\n        ) : (\r\n          <div className=\"no-projects\">\r\n            <p>No projects found.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}