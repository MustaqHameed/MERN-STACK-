{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Tracker Application\\\\task-tracker-frontend\\\\src\\\\components\\\\project\\\\ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ProjectCard from './ProjectCard';\nimport '../styles/ProjectList.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = ({\n  refreshProjects\n}) => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProjectsWithTasks = async () => {\n      try {\n        setLoading(true);\n        const token = localStorage.getItem('authToken');\n\n        // Fetch projects\n        const res = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/projects`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const projects = res.data;\n\n        // Fetch tasks for each project using projectId in the path\n        const projectsWithTaskCounts = await Promise.all(projects.map(async project => {\n          try {\n            const taskRes = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/tasks/${project._id}`,\n            // Fetch tasks using projectId in path\n            {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            const tasks = taskRes.data;\n            const totalTasks = tasks.length;\n\n            // Calculate counts for Pending, In Progress, and Completed tasks\n            const pendingTasks = tasks.filter(task => task.status === 'Pending').length;\n            const inProgressTasks = tasks.filter(task => task.status === 'In Progress').length;\n            const completedTasks = tasks.filter(task => task.status === 'Completed').length;\n\n            // Adding task counts to the project object\n            return {\n              ...project,\n              tasks,\n              totalTasks,\n              pendingTasks,\n              inProgressTasks,\n              completedTasks\n            };\n          } catch (taskErr) {\n            console.error(`Failed to fetch tasks for project ${project._id}`);\n            return {\n              ...project,\n              tasks: [],\n              totalTasks: 0,\n              pendingTasks: 0,\n              inProgressTasks: 0,\n              completedTasks: 0\n            }; // If tasks fail, return empty array\n          }\n        }));\n        setProjects(projectsWithTaskCounts);\n      } catch (err) {\n        console.error(err);\n        setError('Failed to fetch projects');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjectsWithTasks();\n  }, [refreshProjects]); // Only refetch when refreshProjects changes\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-project-btn\",\n        onClick: () => navigate('/projects/create'),\n        children: \"Create New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-list\",\n      children: projects.length > 0 ? projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: project,\n        totalTasks: project.totalTasks,\n        pendingTasks: project.pendingTasks,\n        inProgressTasks: project.inProgressTasks,\n        completedTasks: project.completedTasks\n      }, project._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-projects\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No projects found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectList, \"aL8t7UUjNb2/yA2cemYHJu5qwVM=\", false, function () {\n  return [useNavigate];\n});\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useEffect","useState","axios","ProjectCard","useNavigate","jsxDEV","_jsxDEV","ProjectList","refreshProjects","_s","projects","setProjects","loading","setLoading","error","setError","navigate","fetchProjectsWithTasks","token","localStorage","getItem","res","get","process","env","REACT_APP_API_BASE_URL","headers","Authorization","data","projectsWithTaskCounts","Promise","all","map","project","taskRes","_id","tasks","totalTasks","length","pendingTasks","filter","task","status","inProgressTasks","completedTasks","taskErr","console","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Task Tracker Application/task-tracker-frontend/src/components/project/ProjectList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ProjectCard from './ProjectCard';\r\nimport '../styles/ProjectList.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ refreshProjects }) => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProjectsWithTasks = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const token = localStorage.getItem('authToken');\r\n        \r\n        // Fetch projects\r\n        const res = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/projects`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        const projects = res.data;\r\n\r\n        // Fetch tasks for each project using projectId in the path\r\n        const projectsWithTaskCounts = await Promise.all(\r\n          projects.map(async (project) => {\r\n            try {\r\n              const taskRes = await axios.get(\r\n                `${process.env.REACT_APP_API_BASE_URL}/api/tasks/${project._id}`, // Fetch tasks using projectId in path\r\n                {\r\n                  headers: { Authorization: `Bearer ${token}` },\r\n                }\r\n              );\r\n\r\n              const tasks = taskRes.data;\r\n              const totalTasks = tasks.length;\r\n\r\n              // Calculate counts for Pending, In Progress, and Completed tasks\r\n              const pendingTasks = tasks.filter(task => task.status === 'Pending').length;\r\n              const inProgressTasks = tasks.filter(task => task.status === 'In Progress').length;\r\n              const completedTasks = tasks.filter(task => task.status === 'Completed').length;\r\n\r\n              // Adding task counts to the project object\r\n              return { ...project, tasks, totalTasks, pendingTasks, inProgressTasks, completedTasks };\r\n            } catch (taskErr) {\r\n              console.error(`Failed to fetch tasks for project ${project._id}`);\r\n              return { ...project, tasks: [], totalTasks: 0, pendingTasks: 0, inProgressTasks: 0, completedTasks: 0 }; // If tasks fail, return empty array\r\n            }\r\n          })\r\n        );\r\n\r\n        setProjects(projectsWithTaskCounts);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError('Failed to fetch projects');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProjectsWithTasks();\r\n  }, [refreshProjects]); // Only refetch when refreshProjects changes\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-spinner\">\r\n        <p>Loading...</p> {/* You could replace this with a spinner */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"error-message\">\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-list-container\">\r\n      <div className=\"project-header\">\r\n        <h2>Your Projects</h2>\r\n        <button\r\n          className=\"create-project-btn\"\r\n          onClick={() => navigate('/projects/create')}\r\n        >\r\n          Create New Project\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"project-list\">\r\n        {projects.length > 0 ? (\r\n          projects.map((project) => (\r\n            <ProjectCard\r\n              key={project._id}\r\n              project={project}\r\n              totalTasks={project.totalTasks}\r\n              pendingTasks={project.pendingTasks}\r\n              inProgressTasks={project.inProgressTasks}\r\n              completedTasks={project.completedTasks}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div className=\"no-projects\">\r\n            <p>No projects found.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}