{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Tracker Application\\\\task_tracker-frontend\\\\src\\\\components\\\\project\\\\ProjectList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ProjectCard from './ProjectCard';\nimport '../styles/ProjectList.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = ({\n  refreshProjects\n}) => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchProjects = async () => {\n      try {\n        const res = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/projects`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        setProjects(res.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch projects');\n        setLoading(false);\n      }\n    };\n    fetchProjects();\n  }, [refreshProjects]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-project-btn\",\n        onClick: () => navigate('/projects/create'),\n        children: \"Create New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-list\",\n      children: projects.length > 0 ? projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: project\n      }, project._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-projects-message\",\n        children: \"No projects found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectList, \"aL8t7UUjNb2/yA2cemYHJu5qwVM=\", false, function () {\n  return [useNavigate];\n});\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useEffect","useState","axios","ProjectCard","useNavigate","jsxDEV","_jsxDEV","ProjectList","refreshProjects","_s","projects","setProjects","loading","setLoading","error","setError","navigate","fetchProjects","res","get","process","env","REACT_APP_API_BASE_URL","headers","Authorization","localStorage","getItem","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","length","map","project","_id","_c","$RefreshReg$"],"sources":["D:/Task Tracker Application/task_tracker-frontend/src/components/project/ProjectList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ProjectCard from './ProjectCard';\r\nimport '../styles/ProjectList.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ refreshProjects }) => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      try {\r\n        const res = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/projects`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`,\r\n          },\r\n        });\r\n        setProjects(res.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Failed to fetch projects');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n  }, [refreshProjects]);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"project-list-container\">\r\n      <div className=\"project-header\">\r\n        <h2>Your Projects</h2>\r\n        <button\r\n          className=\"create-project-btn\"\r\n          onClick={() => navigate('/projects/create')}\r\n        >\r\n          Create New Project\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"project-list\">\r\n        {projects.length > 0 ? (\r\n          projects.map((project) => (\r\n            <ProjectCard key={project._id} project={project} />\r\n          ))\r\n        ) : (\r\n          <p className=\"no-projects-message\">No projects found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}