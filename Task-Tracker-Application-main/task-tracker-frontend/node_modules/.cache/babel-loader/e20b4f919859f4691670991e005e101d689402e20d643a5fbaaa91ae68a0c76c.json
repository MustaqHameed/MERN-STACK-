{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Tracker Application\\\\task_tracker-frontend\\\\src\\\\components\\\\project\\\\ProjectCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/ProjectCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectCard = ({\n  project,\n  totalTasks,\n  completedTasks\n}) => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [isCompleted, setIsCompleted] = useState(false);\n\n  // Function to format description if needed\n  const formatDescription = description => {\n    return description ? description : 'No description available';\n  };\n  useEffect(() => {\n    // Only calculate progress if tasks are available\n    if (project.tasks && project.tasks.length > 0) {\n      const totalTasks = project.tasks.length;\n\n      // Consider tasks as completed if the status is 'completed' or if 'completedAt' exists\n      const completedTasks = project.tasks.filter(task => task.status === 'completed' || task.completedAt).length;\n      const progressValue = completedTasks / totalTasks * 100;\n      setProgress(progressValue);\n      setIsCompleted(completedTasks === totalTasks); // All tasks completed\n    } else {\n      setProgress(0);\n      setIsCompleted(false); // No tasks means not completed\n    }\n  }, [project.tasks]); // Recalculate progress when tasks change\n  // Re-run effect when tasks or completion changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `project-card ${isCompleted ? 'completed' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"project-title\",\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"project-description\",\n        children: formatDescription(project.description)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: `project-status ${isCompleted ? 'done' : 'in-progress'}`,\n          children: [\"Status: \", isCompleted ? 'Completed' : 'In Progress']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"horizontal-progress-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontal-progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${progress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"progress-percent\",\n            children: [Math.round(progress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"task-count\",\n          children: [\"Tasks: \", completedTasks, \" / \", totalTasks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-footer\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/projects/${project._id}`,\n        className: \"view-details-btn\",\n        children: \"View Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectCard, \"trC5qcRBxZ9SWXyinItdWveXRmQ=\");\n_c = ProjectCard;\nexport default ProjectCard;\nvar _c;\n$RefreshReg$(_c, \"ProjectCard\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","ProjectCard","project","totalTasks","completedTasks","_s","progress","setProgress","isCompleted","setIsCompleted","formatDescription","description","tasks","length","filter","task","status","completedAt","progressValue","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","style","width","Math","round","to","_id","_c","$RefreshReg$"],"sources":["D:/Task Tracker Application/task_tracker-frontend/src/components/project/ProjectCard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/ProjectCard.css';\r\n\r\nconst ProjectCard = ({ project, totalTasks, completedTasks }) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n\r\n  // Function to format description if needed\r\n  const formatDescription = description => {\r\n    return description ? description : 'No description available';\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Only calculate progress if tasks are available\r\n    if (project.tasks && project.tasks.length > 0) {\r\n      const totalTasks = project.tasks.length;\r\n  \r\n      // Consider tasks as completed if the status is 'completed' or if 'completedAt' exists\r\n      const completedTasks = project.tasks.filter(task => \r\n        task.status === 'completed' || task.completedAt\r\n      ).length;\r\n  \r\n      const progressValue = (completedTasks / totalTasks) * 100;\r\n      setProgress(progressValue);\r\n      setIsCompleted(completedTasks === totalTasks); // All tasks completed\r\n    } else {\r\n      setProgress(0);\r\n      setIsCompleted(false); // No tasks means not completed\r\n    }\r\n  }, [project.tasks]); // Recalculate progress when tasks change\r\n   // Re-run effect when tasks or completion changes\r\n\r\n  return (\r\n    <div className={`project-card ${isCompleted ? 'completed' : ''}`}>\r\n      <div className=\"card-header\">\r\n        <h3 className=\"project-title\">{project.title}</h3>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <p className=\"project-description\">{formatDescription(project.description)}</p>\r\n        <div className=\"status-section\">\r\n          <p className={`project-status ${isCompleted ? 'done' : 'in-progress'}`}>\r\n            Status: {isCompleted ? 'Completed' : 'In Progress'}\r\n          </p>\r\n          <div className=\"horizontal-progress-container\">\r\n            <div className=\"horizontal-progress-bar\">\r\n              <div className=\"progress-fill\" style={{ width: `${progress}%` }}></div>\r\n            </div>\r\n            <p className=\"progress-percent\">{Math.round(progress)}%</p>\r\n          </div>\r\n          <p className=\"task-count\">\r\n            Tasks: {completedTasks} / {totalTasks}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card-footer\">\r\n        <Link to={`/projects/${project._id}`} className=\"view-details-btn\">\r\n          View Details\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}