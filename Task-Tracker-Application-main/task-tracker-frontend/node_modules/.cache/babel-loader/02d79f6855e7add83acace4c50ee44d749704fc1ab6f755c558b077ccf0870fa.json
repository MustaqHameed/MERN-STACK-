{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task Tracker Application\\\\task_tracker-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport SignupForm from './components/Auth/SignupForm';\nimport LoginForm from './components/Auth/LoginForm';\nimport ProjectList from './components/project/ProjectList';\nimport CreateProjectForm from './components/project/CreateProjectForm';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport TaskForm from './components/tasks/TaskForm';\nimport TaskDetails from './components/tasks/TaskDetails';\nimport TaskList from './components/tasks/TaskList';\nimport Header from './components/Layout/Header'; // Your header component\nimport Dashboard from './components/Dashboard/Dashboard'; // Your dashboard component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    // Check if user is logged in by checking for an auth token in localStorage\n    const userLoggedIn = localStorage.getItem('authToken') !== null;\n    setIsLoggedIn(userLoggedIn);\n  }, []); // Run only once on mount\n\n  const handleLogin = () => {\n    // Set auth token in localStorage\n    localStorage.setItem('authToken', 'your-auth-token');\n    // Update login state to trigger re-render\n    setIsLoggedIn(true);\n  };\n  const handleLogout = () => {\n    // Remove auth token from localStorage\n    localStorage.removeItem('authToken');\n    // Update login state\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [isLoggedIn && /*#__PURE__*/_jsxDEV(Header, {\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 49\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(SignupForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(LoginForm, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projects\",\n          element: /*#__PURE__*/_jsxDEV(ProjectList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projects/create\",\n          element: /*#__PURE__*/_jsxDEV(CreateProjectForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/projects/:projectId\",\n          element: /*#__PURE__*/_jsxDEV(ProjectDetails, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 55\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"tasks\",\n            element: /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n            path: \"tasks/:taskId\",\n            element: /*#__PURE__*/_jsxDEV(TaskDetails, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n            path: \"tasks/new\",\n            element: /*#__PURE__*/_jsxDEV(TaskForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","SignupForm","LoginForm","ProjectList","CreateProjectForm","ProjectDetails","TaskForm","TaskDetails","TaskList","Header","Dashboard","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","userLoggedIn","localStorage","getItem","handleLogin","setItem","handleLogout","removeItem","children","className","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","onLogin","_c","$RefreshReg$"],"sources":["D:/Task Tracker Application/task_tracker-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport SignupForm from './components/Auth/SignupForm';\nimport LoginForm from './components/Auth/LoginForm';\nimport ProjectList from './components/project/ProjectList';\nimport CreateProjectForm from './components/project/CreateProjectForm';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport TaskForm from './components/tasks/TaskForm';\nimport TaskDetails from './components/tasks/TaskDetails';\nimport TaskList from './components/tasks/TaskList';\nimport Header from './components/Layout/Header'; // Your header component\nimport Dashboard from './components/Dashboard/Dashboard'; // Your dashboard component\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    // Check if user is logged in by checking for an auth token in localStorage\n    const userLoggedIn = localStorage.getItem('authToken') !== null;\n    setIsLoggedIn(userLoggedIn);\n  }, []);  // Run only once on mount\n\n  const handleLogin = () => {\n    // Set auth token in localStorage\n    localStorage.setItem('authToken', 'your-auth-token');\n    // Update login state to trigger re-render\n    setIsLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    // Remove auth token from localStorage\n    localStorage.removeItem('authToken');\n    // Update login state\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <Router>\n      <div className=\"app\">\n        {isLoggedIn && <Header onLogout={handleLogout} />} {/* Show header if logged in */}\n\n        <Routes>\n          {/* Authentication Routes */}\n          <Route path=\"/\" element={isLoggedIn ? <Dashboard /> : <Navigate to=\"/login\" />} />\n          <Route path=\"/signup\" element={<SignupForm />} />\n          <Route path=\"/login\" element={<LoginForm onLogin={handleLogin} />} />\n\n          {/* Projects Routes */}\n          <Route path=\"/projects\" element={<ProjectList />} />\n          <Route path=\"/projects/create\" element={<CreateProjectForm />} />\n\n          {/* Nested Routes for Project Details and Tasks */}\n          <Route path=\"/projects/:projectId\" element={<ProjectDetails />}>\n            <Route path=\"tasks\" element={<TaskList />} /> {/* Nested Task List route under ProjectDetails */}\n            <Route path=\"tasks/:taskId\" element={<TaskDetails />} /> {/* Task Details route */}\n            <Route path=\"tasks/new\" element={<TaskForm />} /> {/* New Task Form */}\n          </Route>\n\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}